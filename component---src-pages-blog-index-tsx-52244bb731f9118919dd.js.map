{"version":3,"sources":["webpack:///./src/pages/blogIndex.tsx"],"names":["height","minHeight","marginBottom","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","description","map","node","frontmatter","fields","slug","key","rhythm","style","boxShadow","color","fontFamily","to","date","display","timeToRead","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"+VAyCoB,CAAEA,OAAQ,OAAQC,UAAW,U,6GAaxB,CACHC,aADG,W,4GAwBA,CAAEA,aAAF,YAeVC,UA3DG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OAEE,kBAAC,IAAD,KACE,yBACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAM,YACNI,YAAY,0DAEd,kBAAC,IAAD,MACCH,EAAMI,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,0BAEkBE,YAAO,EAAI,IAG3B,kBAAC,OAAD,CACEC,MAAO,CACLC,UAAW,OACXC,MAAO,UACPC,WAAY,0BAEdC,GAAIV,EAAKE,OAAOC,MAEfT,IAGL,+BAAQM,EAAKC,YAAYU,KAAzB,OACA,uBAAGL,MAAO,CAAEM,QAAS,WACnB,2BACE,qCAAWZ,EAAKa,WAAhB,gBAIN,iCACE,qBAEEC,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYH,aAAeE,EAAKgB,SAHjD,MACuBX,YAAO,gBAiBzC,IAAMY,EAAY","file":"component---src-pages-blog-index-tsx-52244bb731f9118919dd.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from 'react'\nimport { PageProps, Link, graphql } from 'gatsby'\n\nimport Bio from '../components/blog-components/bio'\nimport Layout from '../components/blog-components/layout'\nimport SEO from '../components/blog-components/seo'\nimport { rhythm } from '../utils/typography'\n\nimport ThemeProvider from '../components/blog-components/ThemeProvider'\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    // <Link to=\"/blogIndex\">Blog</Link>\n    <ThemeProvider>\n      <section css={{ height: '100%', minHeight: '100vh' }}>\n        <Layout location={location} title={siteTitle}>\n          <SEO\n            title=\"All posts\"\n            description=\"All posts of Paras Gupta's personal portfolio / blog.\"\n          />\n          <Bio />\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h2\n                    css={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{\n                        boxShadow: `none`,\n                        color: '#ed097b',\n                        fontFamily: `Montserrat, sans-serif`,\n                      }}\n                      to={node.fields.slug}\n                    >\n                      {title}\n                    </Link>\n                  </h2>\n                  <small>{node.frontmatter.date}. &nbsp;</small>\n                  <p style={{ display: `inline` }}>\n                    <b>\n                      <small> â˜• {node.timeToRead} min read</small>\n                    </b>\n                  </p>\n                </header>\n                <section>\n                  <p\n                    css={{ marginBottom: rhythm(1.5) }}\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                  />\n                </section>\n              </article>\n            )\n          })}\n        </Layout>\n      </section>\n    </ThemeProvider>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}