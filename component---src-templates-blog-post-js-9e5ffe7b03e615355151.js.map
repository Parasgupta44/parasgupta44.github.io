{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["height","minHeight","a","boxShadow","borderBottomColor","borderBottomStyle","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","Consumer","theme","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","fontWeight","timeToRead","dangerouslySetInnerHTML","__html","html","getTheme","color","borderBottom","borderColor","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"iYAkBoB,CAAEA,OAAQ,OAAQC,UAAW,U,gHAuC1B,CACHC,EAAG,CACDC,UAAW,uBACXC,kBAFC,OAGD,mBAAoB,CAClBC,kBAAmB,QACnBD,kBAFkB,cAsD3BE,UAxGU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,KACE,yBACE,kBAAC,IAAaC,SAAd,MACG,gBAAGC,EAAH,EAAGA,MAAH,OACC,kBAAC,IAAD,CAAQV,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKU,YAAYL,MACxBM,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGfhB,EAAKU,YAAYL,OAEpB,uBACEQ,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,SACRF,aAAcD,YAAO,MAGtBf,EAAKU,YAAYS,KAPpB,OASA,uBACEN,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,GACrBK,WAAY,UAGbpB,EAAKqB,WARR,gBAWF,qBAWEC,wBAAyB,CAAEC,OAAQvB,EAAKwB,MAX1C,KAIyBC,YAAShB,GAAOiB,MAJzC,MAO2BD,YAAShB,GAAOiB,QAM3C,wBACEb,MAAO,CACLc,aAAa,aAAcF,YAAShB,GAAOmB,YAC3CtC,OAAQ,EACR0B,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLK,QAAQ,OACRW,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACG1B,GACC,kBAAC,OAAD,CAAM2B,GAAI3B,EAAS4B,OAAOC,KAAMC,IAAI,QAApC,KACK9B,EAASI,YAAYL,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAM0B,GAAI1B,EAAK2B,OAAOC,KAAMC,IAAI,QAC7B7B,EAAKG,YAAYL,MADpB,gBAiBf,IAAMgC,EAAS","file":"component---src-templates-blog-post-js-9e5ffe7b03e615355151.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/blog-components/bio'\nimport Layout from '../components/blog-components/layout'\nimport SEO from '../components/blog-components/seo'\nimport { rhythm, scale } from '../utils/typography'\nimport ThemeProvider from '../components/blog-components/ThemeProvider'\nimport ThemeContext from '../components/blog-components/ThemeContext'\nimport { getTheme } from '../utils/theme'\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <ThemeProvider>\n      <section css={{ height: '100%', minHeight: '100vh' }}>\n        <ThemeContext.Consumer>\n          {({ theme }) => (\n            <Layout location={location} title={siteTitle}>\n              <SEO\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n              />\n              <article>\n                <header>\n                  <h1\n                    style={{\n                      marginTop: rhythm(1),\n                      marginBottom: 0,\n                    }}\n                  >\n                    {post.frontmatter.title}\n                  </h1>\n                  <p\n                    style={{\n                      ...scale(-1 / 5),\n                      display: `inline`,\n                      marginBottom: rhythm(1),\n                    }}\n                  >\n                    {post.frontmatter.date}. &nbsp;\n                  </p>\n                  <p\n                    style={{\n                      ...scale(-1 / 5),\n                      display: `block`,\n                      marginBottom: rhythm(1),\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {post.timeToRead} min read ☕\n                  </p>\n                </header>\n                <div\n                  css={{\n                    a: {\n                      boxShadow: '0 0 0 0 currentColor',\n                      borderBottomColor: getTheme(theme).color,\n                      '&:hover, &:focus': {\n                        borderBottomStyle: 'solid',\n                        borderBottomColor: getTheme(theme).color,\n                      },\n                    },\n                  }}\n                  dangerouslySetInnerHTML={{ __html: post.html }}\n                />\n                <hr\n                  style={{\n                    borderBottom: `1px solid ${getTheme(theme).borderColor}`,\n                    height: 0,\n                    marginBottom: rhythm(1),\n                  }}\n                />\n                <footer>\n                  <Bio />\n                </footer>\n              </article>\n\n              <nav>\n                <ul\n                  style={{\n                    display: `flex`,\n                    flexWrap: `wrap`,\n                    justifyContent: `space-between`,\n                    listStyle: `none`,\n                    padding: 0,\n                  }}\n                >\n                  <li>\n                    {previous && (\n                      <Link to={previous.fields.slug} rel=\"prev\">\n                        ← {previous.frontmatter.title}\n                      </Link>\n                    )}\n                  </li>\n                  <li>\n                    {next && (\n                      <Link to={next.fields.slug} rel=\"next\">\n                        {next.frontmatter.title} →\n                      </Link>\n                    )}\n                  </li>\n                </ul>\n              </nav>\n            </Layout>\n          )}\n        </ThemeContext.Consumer>\n      </section>\n    </ThemeProvider>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n      }\n      timeToRead\n    }\n  }\n`\n"],"sourceRoot":""}